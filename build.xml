<project name="simplenlg" basedir="." default="main">
    
    <presetdef name="javac">
        <javac includeantruntime="false" />
    </presetdef>
    
    <property name="src.dir"     value="src"/>
    <property name="testsrc.dir" value="testsrc"/>
    <property name="res.dir"     value="res" />

    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="report.dir"  value="${build.dir}/junitreport"/>

    <property name="main-class"  value="simplenlg.server.SimpleServer"/>
    
	<property name="lib.dir"     value="lib"/>

<!--
    <path id="classpath">
        <fileset dir="${lib.dir}" includes="**/*.jar"/>
    </path>
-->
    <path id="classpath">
        <pathelement path="${lib.dir}/junit-4.4.jar" />
        <pathelement path="${lib.dir}/lexAccess2011dist.jar" />
        <pathelement path="${lib.dir}/lexCheck2006api.jar" />
        <pathelement path="${lib.dir}/lvg2011api.jar" />
    </path>
    
    <path id="application" location="${jar.dir}/${ant.project.name}.jar"/>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath">
			<!-- Someone is using internal Sun/Oracle classes... -->
			<compilerarg value="-XDignore.symbol.file" />
		</javac>
        <copy todir="${classes.dir}">
            <fileset dir="${res.dir}" includes="*.properties"/>
        </copy>
        <copy todir="${classes.dir}/simplenlg/lexicon">
        	<fileset dir="${res.dir}" includes="default-lexicon.xml" />
        </copy>
    </target>

    <target name="compile.test" depends="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${testsrc.dir}" destdir="${classes.dir}" classpathref="classpath"/>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
            </manifest>
            
            <!--Coppies all the jar files into the package-->
        	<fileset dir="${classes.dir}" includes="**/*.class" />
        	<zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
        </jar>
    </target>

    <target name="run" depends="jar">
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="classpath"/>
                <path refid="application"/>
            </classpath>
            <jvmarg line="-Xmx512m"/>
        </java>
    </target>

    <target name="junit" depends="compile.test,jar">
		<mkdir dir="${report.dir}"/>
        <junit fork="true" printsummary="yes">
            <classpath>
                <path refid="classpath"/>
                <path refid="application"/>
            </classpath>
            
            <jvmarg line="-Xmx512m"/>
            
            <formatter type="xml"/>
            
            <batchtest todir="${report.dir}">
                <fileset dir="${testsrc.dir}">
                    <!-- the following files are excluded as they are not actual
                    tests. Usually, just a superclass with the test setup. -->
                        <exclude name="**/SyntaxTests.*" />
                        <exclude name="**/SharedLexiconTests.*" />
                        <exclude name="**/SimpleNLG4Test.*" />
                        <exclude name="**/StandAloneExample*" />
                        <exclude name="**/Tester.*" /> <!-- xml -->
                </fileset>
            </batchtest>
        </junit>
    </target>
    
	<target name="junitreport">
        <junitreport todir="${report.dir}">
            <fileset dir="${report.dir}" includes="TEST-*.xml"/>
            <report todir="${report.dir}"/>
        </junitreport>
    </target>
    
    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,run"/>

</project>